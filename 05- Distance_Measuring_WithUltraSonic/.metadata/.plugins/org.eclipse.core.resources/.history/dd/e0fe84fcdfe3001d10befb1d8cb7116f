
#include "Ultrasonic.h"

Std_ReturnType Ultrasonic_Init(const ultrasonic_t *_config){
    Std_ReturnType ret = E_OK;
    
    if(NULL == _config){
        ret = E_NOT_OK;
    }
    else{
        ret = GPIO_pin_initialize(&(_config->Trigger_Pin));
        ret &= GPIO_pin_initialize(&(_config->Echo_Pin));
    }
    
    return ret;
}

Std_ReturnType Ultrasonic_TriggerPin(const ultrasonic_t *_config){
    Std_ReturnType ret = E_OK;
    if(NULL == _config){
        ret = E_NOT_OK;
    }
    else{
        /* Send Trigger Signal to the Ultrasonic Trigger Pin */
        ret = GPIO_pin_write_logic(&(_config->Trigger_Pin), GPIO_HIGH);
        _delay_us(10);
        ret = GPIO_pin_write_logic(&(_config->Trigger_Pin), GPIO_LOW);
        
//        /* Wait the Echo pin to be High */
//        while(GPIO_LOW == EchoPinLogic){
//            ret = GPIO_pin_read_logic(&(_config->Echo_Pin), &EchoPinLogic);
//        }
//
//        /* Clear Timer0 Ticks -> Already Enabled */
//        //ret = Timer0_Write_Value(&timer0_timer_obj, 0);
//
//        /* Wait the Echo pin to be Low */
//        while(GPIO_HIGH == EchoPinLogic){
//            ret = GPIO_pin_read_logic(&(_config->Echo_Pin), &EchoPinLogic);
//        }
//
//        /* Read the time */
//        //ret = Timer0_Read_Value(&timer0_timer_obj, &Timer0_Value);
//
//        /* Calculate the distance */
//        *Distance = (uint16)(Timer0_Value / 58.8f);
    }
    
    return ret;
}

uint16 Ultrasonic_getDistance(const uint16 a_pulseLength)
{
	return (uint16)(a_pulseLength * (SOUND_SPEED_CM_SECOND/2000000.0));
}
